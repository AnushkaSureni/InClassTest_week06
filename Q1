#include <iostream>
using namespace std;

#define MAX_SIZE 25

class Stack {
private:
    int arr[MAX_SIZE];
    int top;

public:
    Stack() {
        top = -1;
    }
    //check whether stack is empty.
    bool isEmpty() {
        if (top<0){
            return true;
        }
        else{
            return false;
        }
    }
    
    // push an element x to the stack
    bool push(int x) {
        top=top+1;
        if (top > MAX_SIZE ) {
            cout << "Stack Overflow!" << endl;
            return false;
        } else {
            arr[top] = x;
            return true;
        }
    }
    
    //remove a element from the stack
    int pop() {
        if (isEmpty()) {
            cout << "Stack Underflow!" << endl;
            return -1;
        } else {
            int popped_element = arr[top];
            top=top-1;
            return popped_element;
        }
    }

    //display the final stack
    void displayStack() {
        cout << "Final stack:" << endl;
        for(int i = 0; i <=top; i++) {
            cout << arr[i] << " ";
        }
        cout << endl;
    }
};

int main() {
    Stack s;
    s.push(8);
    s.push(10);
    s.push(5);
    s.push(11);
    s.push(15);
    s.push(23);
    s.push(6);
    s.push(18);
    s.push(20);
    s.push(17);
    s.displayStack();
    s.pop();
    s.pop();
    s.pop();
    s.pop();
    s.pop();
    s.push(4);
    s.push(13);
    s.push(3);
    s.push(1);
    s.displayStack();
    return 0;
}
